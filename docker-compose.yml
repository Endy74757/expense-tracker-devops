version: "3.9"

services:

  nginx:
    image: nginx:1.21
    ports:
      - "80:80"  # เข้าถึง NGINX ที่พอร์ต 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Map ไฟล์ config
    depends_on:
      - user_service
      - transaction_service
      - category_service
    networks:
      - backend

  # User Service
  mongo_users:
    image: mongo:6.0
    container_name: mongo_users
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - ./user-service/mongo_users_data:/data/db
    networks:
      - backend

  # Category Service
  mongo_categories:
    image: mongo:6.0
    container_name: mongo_categories
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - mongo_categories_data:/data/db
    networks:
      - backend

  # Transaction Service
  mongo_transactions:
    image: mongo:6.0
    container_name: mongo_transactions
    restart: always
    ports:
      - "27020:27017"
    volumes:
      - ./transaction-service/mongo_transactions_data:/data/db
    networks:
      - backend

  user_service:
    build: ./user-service
    image: user_service
    container_name: user_service
    restart: always
    ports:
      - "8000:8000"
    environment:
      MONGO_URI: mongodb://mongo_users:27017
      SECRET_KEY: ${SECRET_KEY}   # เปลี่ยนเป็น secret จริง
    depends_on:
      - mongo_users
    networks:
      - backend
  
  transaction_service:
    build: ./transaction-service
    image: transaction_service
    container_name: transaction_service
    restart: always
    depends_on:
      - mongo_transactions
    ports:
      - "8001:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - MONGO_URI=mongodb://mongo_transactions:27017
    networks:
      - backend
  
  category_service:
    build: ./category-service
    image: category_service
    container_name: category_service
    restart: always
    depends_on:
      - mongo_categories
    ports:
      - "8002:8000"
    environment:
      - MONGO_URI=mongodb://mongo_categories:27017
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - backend

volumes:
  mongo_users_data:
  mongo_categories_data:
  mongo_transactions_data:
  mongo_notifications_data:

networks:
  backend:
    driver: bridge